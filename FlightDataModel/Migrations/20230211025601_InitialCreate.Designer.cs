// <auto-generated />
using System;
using FlightDataModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlightDataModel.Migrations
{
    [DbContext(typeof(FlightDataContext))]
    [Migration("20230211025601_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("FlightDataModel.CommandModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Command")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Mission")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("ResponseDateTimeOffset")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ResponseWasError")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("SendDateTimeOffset")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Commands");
                });

            modelBuilder.Entity("FlightDataModel.DroneModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MissionCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalFlightTime")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Drones");
                });

            modelBuilder.Entity("FlightDataModel.FlightState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Agx")
                        .HasColumnType("REAL");

                    b.Property<float>("Agy")
                        .HasColumnType("REAL");

                    b.Property<float>("Agz")
                        .HasColumnType("REAL");

                    b.Property<float>("Altitude")
                        .HasColumnType("REAL");

                    b.Property<float>("BarometricAltitude")
                        .HasColumnType("REAL");

                    b.Property<float>("BatteryPercent")
                        .HasColumnType("REAL");

                    b.Property<float>("BatteryTimeLeft")
                        .HasColumnType("REAL");

                    b.Property<int>("Met")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Mission")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MotorTime")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Pitch")
                        .HasColumnType("REAL");

                    b.Property<float>("Roll")
                        .HasColumnType("REAL");

                    b.Property<float>("Snr")
                        .HasColumnType("REAL");

                    b.Property<float>("TotalDistance")
                        .HasColumnType("REAL");

                    b.Property<float>("Vgx")
                        .HasColumnType("REAL");

                    b.Property<float>("Vgy")
                        .HasColumnType("REAL");

                    b.Property<float>("Vgz")
                        .HasColumnType("REAL");

                    b.Property<float>("Yaw")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("FlightStates");
                });

            modelBuilder.Entity("FlightDataModel.MissionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Distance")
                        .HasColumnType("REAL");

                    b.Property<int>("Drone")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("EndDateTimeOffset")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("StartDateTimeOffset")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Missions");
                });
#pragma warning restore 612, 618
        }
    }
}
